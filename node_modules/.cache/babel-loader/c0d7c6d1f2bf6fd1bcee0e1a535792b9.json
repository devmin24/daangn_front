{"ast":null,"code":"import _defineProperty from\"/Users/parkminkyung/sparta_react/daangnmarket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";// 불변성 관리 위한 친구\nimport{produce}from\"immer\";// import { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport axios from\"axios\";// actions\n//const LOG_IN = \"LOG_IN\";\nvar SIGN_UP=\"SIGN_UP\";var LOG_OUT=\"LOG_OUT\";var GET_USER=\"GET_USER\";var SET_USER=\"SET_USER\";// initialState\nvar initialState={user:null,is_login:false//signup: null,\n};var user_initial={user_name:\"anna\"};// middleware actions\nvar loginInfo=[];var loginAction=function loginAction(user){// return function (dispatch, getState, { history }) {\n//   console.log(history);\n//   dispatch(setUser(user));\n//   //실험\n//   loginInfo.push(user);\n//   console.log(loginInfo);\n//   history.push(\"/\");\n// };\n};var loginDB=function loginDB(id,pwd){return function(dispatch,getState,_ref){var history=_ref.history;axios({method:\"POST\",url:\"http://54.180.112.53:8080/api/authenticate\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json;charset=UTF-8\"},data:{username:id,password:pwd}}).then(function(res){console.log(res);localStorage.setItem(\"nick\",JSON.stringify(\"\".concat(id)));sessionStorage.setItem(\"token\",res.data.token);dispatch(setUser({username:id,password:pwd}));history.push(\"/\");window.alert(\"정상적으로 로그인 되었습니다!\");}).catch(function(err){window.alert(\"로그인에 실패하였습니다!\",err);});};};// 회원가입DB\nvar signupDB=function signupDB(id,pwd,nickname){return function(dispatch,getState,_ref2){var history=_ref2.history;axios({method:\"POST\",url:\"http://54.180.112.53:8080/api/signup\",data:{username:id,nickname:nickname,password:pwd}}).then(function(res){//console 찍어보기 res\nconsole.log(\"이건 signupDB 함수야!\");window.location.href=\"/\";window.alert(\"회원가입을 축하드립니다!\");}).catch(function(err){window.alert(\"회원가입에 실패했습니다\",err);});};};var loginCheckDB=function loginCheckDB(is_session){return function(dispatch,getState,_ref3){var history=_ref3.history;if(is_session){dispatch(setUser({nickname:localStorage.getItem(\"nickname\")}));}else{dispatch(logOut());}};};var logOutDB=function logOutDB(){return function(dispatch,getState,_ref4){var history=_ref4.history;sessionStorage.removeItem(\"token\");localStorage.removeItem(\"nick\");dispatch(logOut());history.replace(\"/\");};};// actionCreators\n//const logIn = createAction(LOG_IN, (user) => ({ user }));\nvar logOut=createAction(LOG_OUT,function(user){return{user:user};});var getUser=createAction(GET_USER,function(user){return{user:user};});var setUser=createAction(SET_USER,function(user){return{user:user};});var signUp=createAction(SIGN_UP,function(id,pwd){return{id:id,pwd:pwd};});// reducer\nexport default handleActions((_handleActions={},_defineProperty(_handleActions,SET_USER,function(state,action){return produce(state,function(draft){draft.user=action.payload.user;draft.is_login=true;});}),_defineProperty(_handleActions,SIGN_UP,function(state,action){return produce(state,function(draft){draft.user.push(action.payload.user);draft.is_login=true;});}),_defineProperty(_handleActions,LOG_OUT,function(state,action){return produce(state,function(draft){draft.user=null;draft.is_login=false;});}),_defineProperty(_handleActions,GET_USER,function(state,action){return produce(state,function(draft){});}),_handleActions),initialState);// action creator export\nvar actionCreators={//logIn,\nloginAction:loginAction,logOut:logOut,signUp:signUp,setUser:setUser,getUser:getUser,signupDB:signupDB,loginDB:loginDB,loginCheckDB:loginCheckDB,logOutDB:logOutDB};export{actionCreators};","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","axios","SIGN_UP","LOG_OUT","GET_USER","SET_USER","initialState","user","is_login","user_initial","user_name","loginInfo","loginAction","loginDB","id","pwd","dispatch","getState","history","method","url","headers","Accept","data","username","password","then","res","console","log","localStorage","setItem","JSON","stringify","sessionStorage","token","setUser","push","window","alert","catch","err","signupDB","nickname","location","href","loginCheckDB","is_session","getItem","logOut","logOutDB","removeItem","replace","getUser","signUp","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\n// 불변성 관리 위한 친구\r\nimport { produce } from \"immer\";\r\n// import { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\r\nimport axios from \"axios\";\r\n\r\n// actions\r\n//const LOG_IN = \"LOG_IN\";\r\nconst SIGN_UP = \"SIGN_UP\";\r\nconst LOG_OUT = \"LOG_OUT\";\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_USER = \"SET_USER\";\r\n\r\n// initialState\r\n\r\nconst initialState = {\r\n  user: null,\r\n  is_login: false,\r\n  //signup: null,\r\n};\r\n\r\nconst user_initial = {\r\n  user_name: \"anna\",\r\n};\r\n\r\n// middleware actions\r\nconst loginInfo = [];\r\n\r\nconst loginAction = (user) => {\r\n  // return function (dispatch, getState, { history }) {\r\n  //   console.log(history);\r\n  //   dispatch(setUser(user));\r\n  //   //실험\r\n  //   loginInfo.push(user);\r\n  //   console.log(loginInfo);\r\n  //   history.push(\"/\");\r\n  // };\r\n};\r\n\r\nconst loginDB = (id, pwd) => {\r\n  return function (dispatch, getState, { history }) {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"http://54.180.112.53:8080/api/authenticate\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: {\r\n        username: id,\r\n        password: pwd,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        localStorage.setItem(\"nick\", JSON.stringify(`${id}`));\r\n        sessionStorage.setItem(\"token\", res.data.token);\r\n        dispatch(\r\n          setUser({\r\n            username: id,\r\n            password: pwd,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n        window.alert(\"정상적으로 로그인 되었습니다!\");\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"로그인에 실패하였습니다!\", err);\r\n      });\r\n  };\r\n};\r\n\r\n// 회원가입DB\r\n\r\nconst signupDB = (id, pwd, nickname) => {\r\n  return function (dispatch, getState, { history }) {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"http://54.180.112.53:8080/api/signup\",\r\n      data: {\r\n        username: id,\r\n        nickname: nickname,\r\n        password: pwd,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //console 찍어보기 res\r\n        console.log(\"이건 signupDB 함수야!\");\r\n        window.location.href = \"/\";\r\n        window.alert(\"회원가입을 축하드립니다!\");\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"회원가입에 실패했습니다\", err);\r\n      });\r\n  };\r\n};\r\n\r\nconst loginCheckDB = (is_session) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (is_session) {\r\n      dispatch(setUser({ nickname: localStorage.getItem(\"nickname\") }));\r\n    } else {\r\n      dispatch(logOut());\r\n    }\r\n  };\r\n};\r\n\r\nconst logOutDB = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    sessionStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"nick\");\r\n    dispatch(logOut());\r\n    history.replace(\"/\");\r\n  };\r\n};\r\n\r\n// actionCreators\r\n\r\n//const logIn = createAction(LOG_IN, (user) => ({ user }));\r\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\r\nconst getUser = createAction(GET_USER, (user) => ({ user }));\r\nconst setUser = createAction(SET_USER, (user) => ({ user }));\r\nconst signUp = createAction(SIGN_UP, (id, pwd) => ({ id, pwd }));\r\n\r\n// reducer\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_USER]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.user = action.payload.user;\r\n        draft.is_login = true;\r\n      }),\r\n\r\n    [SIGN_UP]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.user.push(action.payload.user);\r\n        draft.is_login = true;\r\n      }),\r\n\r\n    [LOG_OUT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.user = null;\r\n        draft.is_login = false;\r\n      }),\r\n\r\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\r\n  },\r\n  initialState\r\n);\r\n\r\n// action creator export\r\n\r\nconst actionCreators = {\r\n  //logIn,\r\n  loginAction,\r\n  logOut,\r\n  signUp,\r\n  setUser,\r\n  getUser,\r\n  signupDB,\r\n  loginDB,\r\n  loginCheckDB,\r\n  logOutDB,\r\n};\r\n\r\nexport { actionCreators };\r\n"]},"metadata":{},"sourceType":"module"}