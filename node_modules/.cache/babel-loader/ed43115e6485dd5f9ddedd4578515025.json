{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\"; // import User from \"./modules/user\";\n\nimport Post from \"./modules/post\";\nexport const history = createBrowserHistory();\nconst rootReducer = combineReducers({\n  // user: User,\n  post: Post,\n  router: connectRouter(history)\n});\nconst middlewares = [thunk.withExtraArgument({\n  history: history\n})]; // 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\n\nconst env = process.env.NODE_ENV; // 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\n\nif (env === \"development\") {\n  const {\n    logger\n  } = require(\"redux-logger\");\n\n  middlewares.push(logger);\n}\n\nconst composeEnhancers = typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = initialStore => createStore(rootReducer, enhancer);\n\nexport default store();","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","Post","history","rootReducer","post","router","middlewares","withExtraArgument","env","process","NODE_ENV","logger","require","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,OAAO,MAAMC,OAAO,GAAGH,oBAAoB,EAApC;AAEP,MAAMI,WAAW,GAAGR,eAAe,CAAC;AAClC;AACAS,EAAAA,IAAI,EAAEH,IAF4B;AAGlCI,EAAAA,MAAM,EAAEL,aAAa,CAACE,OAAD;AAHa,CAAD,CAAnC;AAMA,MAAMI,WAAW,GAAG,CAACR,KAAK,CAACS,iBAAN,CAAwB;AAAEL,EAAAA,OAAO,EAAEA;AAAX,CAAxB,CAAD,CAApB,C,CAEA;;AACA,MAAMM,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB,C,CAEA;;AACA,IAAIF,GAAG,KAAK,aAAZ,EAA2B;AACzB,QAAM;AAAEG,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAN,EAAAA,WAAW,CAACO,IAAZ,CAAiBF,MAAjB;AACD;;AAED,MAAMG,gBAAgB,GACpB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,GAIInB,OALN;AAOA,MAAMoB,QAAQ,GAAGH,gBAAgB,CAAClB,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAAjC;;AAEA,IAAIY,KAAK,GAAIC,YAAD,IAAkBzB,WAAW,CAACS,WAAD,EAAcc,QAAd,CAAzC;;AAEA,eAAeC,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\n// import User from \"./modules/user\";\nimport Post from \"./modules/post\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  // user: User,\n  post: Post,\n  router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n"]},"metadata":{},"sourceType":"module"}