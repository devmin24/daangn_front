{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\n\nvar TextArea = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextArea, _Component);\n\n  function TextArea() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.ref = /*#__PURE__*/createRef();\n\n    _this.focus = function () {\n      return _this.ref.current.focus();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleInput = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onInput', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto = TextArea.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        rows = _this$props.rows,\n        value = _this$props.value;\n    var rest = getUnhandledProps(TextArea, this.props);\n    var ElementType = getElementType(TextArea, this.props);\n    return /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.ref\n    }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      onChange: this.handleChange,\n      onInput: this.handleInput,\n      rows: rows,\n      value: value\n    })));\n  };\n\n  return TextArea;\n}(Component);\n\nTextArea.handledProps = [\"as\", \"onChange\", \"onInput\", \"rows\", \"value\"];\nTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called on input.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onInput: PropTypes.func,\n\n  /** Indicates row count for a TextArea. */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The value of the textarea. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nTextArea.defaultProps = {\n  as: 'textarea',\n  rows: 3\n};\nexport default TextArea;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/addons/TextArea/TextArea.js"],"names":["_extends","_inheritsLoose","_invoke","_get","Ref","PropTypes","React","Component","createRef","getElementType","getUnhandledProps","TextArea","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","ref","focus","current","handleChange","e","value","props","handleInput","_proto","prototype","render","_this$props","rows","rest","ElementType","createElement","innerRef","onChange","onInput","handledProps","propTypes","process","env","NODE_ENV","as","elementType","func","oneOfType","number","string","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\n\nvar TextArea = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextArea, _Component);\n\n  function TextArea() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.ref = /*#__PURE__*/createRef();\n\n    _this.focus = function () {\n      return _this.ref.current.focus();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleInput = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onInput', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto = TextArea.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        rows = _this$props.rows,\n        value = _this$props.value;\n    var rest = getUnhandledProps(TextArea, this.props);\n    var ElementType = getElementType(TextArea, this.props);\n    return /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.ref\n    }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      onChange: this.handleChange,\n      onInput: this.handleInput,\n      rows: rows,\n      value: value\n    })));\n  };\n\n  return TextArea;\n}(Component);\n\nTextArea.handledProps = [\"as\", \"onChange\", \"onInput\", \"rows\", \"value\"];\nTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called on input.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onInput: PropTypes.func,\n\n  /** Indicates row count for a TextArea. */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The value of the textarea. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nTextArea.defaultProps = {\n  as: 'textarea',\n  rows: 3\n};\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}