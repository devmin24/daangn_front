{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _memoize from \"lodash-es/memoize\";\nimport _invoke from \"lodash-es/invoke\";\nimport { isRefObject } from '@fluentui/react-component-ref';\n\nvar ReferenceProxy = /*#__PURE__*/function () {\n  function ReferenceProxy(refObject) {\n    this.ref = refObject;\n  }\n\n  var _proto = ReferenceProxy.prototype;\n\n  _proto.getBoundingClientRect = function getBoundingClientRect() {\n    return _invoke(this.ref.current, 'getBoundingClientRect') || {};\n  };\n\n  _createClass(ReferenceProxy, [{\n    key: \"clientWidth\",\n    get: function get() {\n      return this.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"clientHeight\",\n    get: function get() {\n      return this.getBoundingClientRect().height;\n    }\n  }, {\n    key: \"parentNode\",\n    get: function get() {\n      return this.ref.current ? this.ref.current.parentNode : undefined;\n    }\n  }]);\n\n  return ReferenceProxy;\n}();\n/**\n * Popper.js does not support ref objects from `createRef()` as referenceElement. If we will pass\n * directly `ref`, `ref.current` will be `null` at the render process. We use memoize to keep the\n * same reference between renders.\n *\n * @see https://popper.js.org/popper-documentation.html#referenceObject\n */\n\n\nvar createReferenceProxy = _memoize(function (reference) {\n  return new ReferenceProxy(isRefObject(reference) ? reference : {\n    current: reference\n  });\n});\n\nexport default createReferenceProxy;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Popup/lib/createReferenceProxy.js"],"names":["_createClass","_memoize","_invoke","isRefObject","ReferenceProxy","refObject","ref","_proto","prototype","getBoundingClientRect","current","key","get","width","height","parentNode","undefined","createReferenceProxy","reference"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,IAAIC,cAAc,GAAG,aAAa,YAAY;AAC5C,WAASA,cAAT,CAAwBC,SAAxB,EAAmC;AACjC,SAAKC,GAAL,GAAWD,SAAX;AACD;;AAED,MAAIE,MAAM,GAAGH,cAAc,CAACI,SAA5B;;AAEAD,EAAAA,MAAM,CAACE,qBAAP,GAA+B,SAASA,qBAAT,GAAiC;AAC9D,WAAOP,OAAO,CAAC,KAAKI,GAAL,CAASI,OAAV,EAAmB,uBAAnB,CAAP,IAAsD,EAA7D;AACD,GAFD;;AAIAV,EAAAA,YAAY,CAACI,cAAD,EAAiB,CAAC;AAC5BO,IAAAA,GAAG,EAAE,aADuB;AAE5BC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKH,qBAAL,GAA6BI,KAApC;AACD;AAJ2B,GAAD,EAK1B;AACDF,IAAAA,GAAG,EAAE,cADJ;AAEDC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKH,qBAAL,GAA6BK,MAApC;AACD;AAJA,GAL0B,EAU1B;AACDH,IAAAA,GAAG,EAAE,YADJ;AAEDC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKN,GAAL,CAASI,OAAT,GAAmB,KAAKJ,GAAL,CAASI,OAAT,CAAiBK,UAApC,GAAiDC,SAAxD;AACD;AAJA,GAV0B,CAAjB,CAAZ;;AAiBA,SAAOZ,cAAP;AACD,CA7BiC,EAAlC;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIa,oBAAoB,GAAGhB,QAAQ,CAAC,UAAUiB,SAAV,EAAqB;AACvD,SAAO,IAAId,cAAJ,CAAmBD,WAAW,CAACe,SAAD,CAAX,GAAyBA,SAAzB,GAAqC;AAC7DR,IAAAA,OAAO,EAAEQ;AADoD,GAAxD,CAAP;AAGD,CAJkC,CAAnC;;AAMA,eAAeD,oBAAf","sourcesContent":["import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _memoize from \"lodash-es/memoize\";\nimport _invoke from \"lodash-es/invoke\";\nimport { isRefObject } from '@fluentui/react-component-ref';\n\nvar ReferenceProxy = /*#__PURE__*/function () {\n  function ReferenceProxy(refObject) {\n    this.ref = refObject;\n  }\n\n  var _proto = ReferenceProxy.prototype;\n\n  _proto.getBoundingClientRect = function getBoundingClientRect() {\n    return _invoke(this.ref.current, 'getBoundingClientRect') || {};\n  };\n\n  _createClass(ReferenceProxy, [{\n    key: \"clientWidth\",\n    get: function get() {\n      return this.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"clientHeight\",\n    get: function get() {\n      return this.getBoundingClientRect().height;\n    }\n  }, {\n    key: \"parentNode\",\n    get: function get() {\n      return this.ref.current ? this.ref.current.parentNode : undefined;\n    }\n  }]);\n\n  return ReferenceProxy;\n}();\n/**\n * Popper.js does not support ref objects from `createRef()` as referenceElement. If we will pass\n * directly `ref`, `ref.current` will be `null` at the render process. We use memoize to keep the\n * same reference between renders.\n *\n * @see https://popper.js.org/popper-documentation.html#referenceObject\n */\n\n\nvar createReferenceProxy = _memoize(function (reference) {\n  return new ReferenceProxy(isRefObject(reference) ? reference : {\n    current: reference\n  });\n});\n\nexport default createReferenceProxy;"]},"metadata":{},"sourceType":"module"}