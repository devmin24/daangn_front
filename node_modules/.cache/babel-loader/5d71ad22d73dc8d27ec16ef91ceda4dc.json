{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var _item$key;\n\n    var key = (_item$key = item.key) != null ? _item$key : [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js"],"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useTextAlignProp","useWidthProp","Card","CardGroup","props","centered","children","className","content","doubling","items","itemsPerRow","stackable","textAlign","classes","rest","ElementType","isNil","createElement","itemsJSX","item","_item$key","key","header","description","join","handledProps","propTypes","process","env","NODE_ENV","as","elementType","bool","node","string","contentShorthand","collectionShorthand","oneOf","WIDTHS","TEXT_ALIGNMENTS"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var _item$key;\n\n    var key = (_item$key = item.key) != null ? _item$key : [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;"]},"metadata":{},"sourceType":"module"}