{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _this.handleSubmit = function (e) {\n      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n      // method.\n\n      if (typeof action !== 'string') _invoke(e, 'preventDefault');\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));\n    };\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        action = _this$props.action,\n        children = _this$props.children,\n        className = _this$props.className,\n        error = _this$props.error,\n        inverted = _this$props.inverted,\n        loading = _this$props.loading,\n        reply = _this$props.reply,\n        size = _this$props.size,\n        success = _this$props.success,\n        unstackable = _this$props.unstackable,\n        warning = _this$props.warning,\n        widths = _this$props.widths;\n    var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n    var rest = getUnhandledProps(Form, this.props);\n    var ElementType = getElementType(Form, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      action: action,\n      className: classes,\n      onSubmit: this.handleSubmit\n    }), children);\n  };\n\n  return Form;\n}(Component);\n\nForm.handledProps = [\"action\", \"as\", \"children\", \"className\", \"error\", \"inverted\", \"loading\", \"onSubmit\", \"reply\", \"size\", \"success\", \"unstackable\", \"warning\", \"widths\"];\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\nForm.defaultProps = {\n  as: 'form'\n};\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Group = FormGroup;\nForm.Input = FormInput;\nForm.Radio = FormRadio;\nForm.Select = FormSelect;\nForm.TextArea = FormTextArea;\nexport default Form;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/collections/Form/Form.js"],"names":["_extends","_inheritsLoose","_without","_invoke","cx","PropTypes","React","Component","getElementType","getUnhandledProps","SUI","useKeyOnly","useWidthProp","FormButton","FormCheckbox","FormDropdown","FormField","FormGroup","FormInput","FormRadio","FormSelect","FormTextArea","Form","_Component","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","handleSubmit","e","action","props","_len2","args","_key2","_proto","prototype","render","_this$props","children","className","error","inverted","loading","reply","size","success","unstackable","warning","widths","classes","rest","ElementType","createElement","onSubmit","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string","node","bool","func","oneOf","SIZES","defaultProps","Field","Button","Checkbox","Dropdown","Group","Input","Radio","Select","TextArea"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _this.handleSubmit = function (e) {\n      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n      // method.\n\n      if (typeof action !== 'string') _invoke(e, 'preventDefault');\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));\n    };\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        action = _this$props.action,\n        children = _this$props.children,\n        className = _this$props.className,\n        error = _this$props.error,\n        inverted = _this$props.inverted,\n        loading = _this$props.loading,\n        reply = _this$props.reply,\n        size = _this$props.size,\n        success = _this$props.success,\n        unstackable = _this$props.unstackable,\n        warning = _this$props.warning,\n        widths = _this$props.widths;\n    var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n    var rest = getUnhandledProps(Form, this.props);\n    var ElementType = getElementType(Form, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      action: action,\n      className: classes,\n      onSubmit: this.handleSubmit\n    }), children);\n  };\n\n  return Form;\n}(Component);\n\nForm.handledProps = [\"action\", \"as\", \"children\", \"className\", \"error\", \"inverted\", \"loading\", \"onSubmit\", \"reply\", \"size\", \"success\", \"unstackable\", \"warning\", \"widths\"];\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\nForm.defaultProps = {\n  as: 'form'\n};\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Group = FormGroup;\nForm.Input = FormInput;\nForm.Radio = FormRadio;\nForm.Select = FormSelect;\nForm.TextArea = FormTextArea;\nexport default Form;"]},"metadata":{},"sourceType":"module"}