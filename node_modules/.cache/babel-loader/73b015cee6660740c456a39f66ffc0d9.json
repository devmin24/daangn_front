{"ast":null,"code":"import * as React from 'react';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef } from './utils';\nimport { usePopper } from './usePopper';\n\nvar NOOP = function NOOP() {\n  return void 0;\n};\n\nvar NOOP_PROMISE = function NOOP_PROMISE() {\n  return Promise.resolve(null);\n};\n\nvar EMPTY_MODIFIERS = [];\nexport function Popper(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,\n      referenceElement = _ref.referenceElement,\n      onFirstUpdate = _ref.onFirstUpdate,\n      innerRef = _ref.innerRef,\n      children = _ref.children;\n  var referenceNode = React.useContext(ManagerReferenceNodeContext);\n\n  var _React$useState = React.useState(null),\n      popperElement = _React$useState[0],\n      setPopperElement = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowElement = _React$useState2[0],\n      setArrowElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    setRef(innerRef, popperElement);\n  }, [innerRef, popperElement]);\n  var options = React.useMemo(function () {\n    return {\n      placement: placement,\n      strategy: strategy,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: [].concat(modifiers, [{\n        name: 'arrow',\n        enabled: arrowElement != null,\n        options: {\n          element: arrowElement\n        }\n      }])\n    };\n  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);\n\n  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),\n      state = _usePopper.state,\n      styles = _usePopper.styles,\n      forceUpdate = _usePopper.forceUpdate,\n      update = _usePopper.update;\n\n  var childrenProps = React.useMemo(function () {\n    return {\n      ref: setPopperElement,\n      style: styles.popper,\n      placement: state ? state.placement : placement,\n      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,\n      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,\n      arrowProps: {\n        style: styles.arrow,\n        ref: setArrowElement\n      },\n      forceUpdate: forceUpdate || NOOP,\n      update: update || NOOP_PROMISE\n    };\n  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);\n  return unwrapArray(children)(childrenProps);\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/react-popper/lib/esm/Popper.js"],"names":["React","ManagerReferenceNodeContext","unwrapArray","setRef","usePopper","NOOP","NOOP_PROMISE","Promise","resolve","EMPTY_MODIFIERS","Popper","_ref","_ref$placement","placement","_ref$strategy","strategy","_ref$modifiers","modifiers","referenceElement","onFirstUpdate","innerRef","children","referenceNode","useContext","_React$useState","useState","popperElement","setPopperElement","_React$useState2","arrowElement","setArrowElement","useEffect","options","useMemo","concat","name","enabled","element","_usePopper","state","styles","forceUpdate","update","childrenProps","ref","style","popper","hasPopperEscaped","modifiersData","hide","isReferenceHidden","arrowProps","arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef } from './utils';\nimport { usePopper } from './usePopper';\n\nvar NOOP = function NOOP() {\n  return void 0;\n};\n\nvar NOOP_PROMISE = function NOOP_PROMISE() {\n  return Promise.resolve(null);\n};\n\nvar EMPTY_MODIFIERS = [];\nexport function Popper(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,\n      referenceElement = _ref.referenceElement,\n      onFirstUpdate = _ref.onFirstUpdate,\n      innerRef = _ref.innerRef,\n      children = _ref.children;\n  var referenceNode = React.useContext(ManagerReferenceNodeContext);\n\n  var _React$useState = React.useState(null),\n      popperElement = _React$useState[0],\n      setPopperElement = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowElement = _React$useState2[0],\n      setArrowElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    setRef(innerRef, popperElement);\n  }, [innerRef, popperElement]);\n  var options = React.useMemo(function () {\n    return {\n      placement: placement,\n      strategy: strategy,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: [].concat(modifiers, [{\n        name: 'arrow',\n        enabled: arrowElement != null,\n        options: {\n          element: arrowElement\n        }\n      }])\n    };\n  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);\n\n  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),\n      state = _usePopper.state,\n      styles = _usePopper.styles,\n      forceUpdate = _usePopper.forceUpdate,\n      update = _usePopper.update;\n\n  var childrenProps = React.useMemo(function () {\n    return {\n      ref: setPopperElement,\n      style: styles.popper,\n      placement: state ? state.placement : placement,\n      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,\n      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,\n      arrowProps: {\n        style: styles.arrow,\n        ref: setArrowElement\n      },\n      forceUpdate: forceUpdate || NOOP,\n      update: update || NOOP_PROMISE\n    };\n  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);\n  return unwrapArray(children)(childrenProps);\n}"]},"metadata":{},"sourceType":"module"}