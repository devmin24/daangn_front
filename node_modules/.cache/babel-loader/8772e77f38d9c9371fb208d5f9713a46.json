{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n\n  function Checkbox() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        disabled = _this$props3.disabled,\n        label = _this$props3.label,\n        id = _this$props3.id,\n        name = _this$props3.name,\n        radio = _this$props3.radio,\n        readOnly = _this$props3.readOnly,\n        slider = _this$props3.slider,\n        toggle = _this$props3.toggle,\n        type = _this$props3.type,\n        value = _this$props3.value;\n    var _this$state4 = this.state,\n        checked = _this$state4.checked,\n        indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n      htmlProps: htmlInputAttrs\n    }),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n\n  return Checkbox;\n}(Component);\n\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"names":["_extends","_inheritsLoose","_set","_invoke","_get","_isNil","Ref","cx","PropTypes","React","createRef","ModernAutoControlledComponent","Component","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","htmlInputAttrs","partitionHTMLProps","useKeyOnly","Checkbox","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","inputRef","labelRef","canToggle","_this$props","props","disabled","radio","readOnly","checked","state","computeTabIndex","_this$props2","tabIndex","handleClick","e","id","_this$state","indeterminate","isInputClick","current","target","isLabelClick","isRootClick","hasId","isLabelClickAndForwardedToInput","isClickFromMouse","handleChange","stopPropagation","setState","handleMouseDown","_this$state2","defaultPrevented","preventDefault","handleMouseUp","_this$state3","setIndeterminate","_proto","prototype","componentDidMount","componentDidUpdate","render","_this$props3","className","label","name","slider","toggle","type","value","_this$state4","classes","unhandled","ElementType","_partitionHTMLProps","htmlProps","htmlInputProps","rest","labelElement","defaultProps","htmlFor","autoGenerateKey","createElement","onClick","onChange","onMouseDown","onMouseUp","innerRef","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","bool","string","defaultChecked","defaultIndeterminate","fitted","oneOfType","number","itemShorthand","func","every","disallow","oneOf","autoControlledProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n\n  function Checkbox() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        disabled = _this$props3.disabled,\n        label = _this$props3.label,\n        id = _this$props3.id,\n        name = _this$props3.name,\n        radio = _this$props3.radio,\n        readOnly = _this$props3.readOnly,\n        slider = _this$props3.slider,\n        toggle = _this$props3.toggle,\n        type = _this$props3.type,\n        value = _this$props3.value;\n    var _this$state4 = this.state,\n        checked = _this$state4.checked,\n        indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n      htmlProps: htmlInputAttrs\n    }),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n\n  return Checkbox;\n}(Component);\n\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];"]},"metadata":{},"sourceType":"module"}