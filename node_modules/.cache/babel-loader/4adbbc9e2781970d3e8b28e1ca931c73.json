{"ast":null,"code":"export var TRANSITION_STATUS_INITIAL = 'INITIAL';\nexport var TRANSITION_STATUS_ENTERED = 'ENTERED';\nexport var TRANSITION_STATUS_ENTERING = 'ENTERING';\nexport var TRANSITION_STATUS_EXITED = 'EXITED';\nexport var TRANSITION_STATUS_EXITING = 'EXITING';\nexport var TRANSITION_STATUS_UNMOUNTED = 'UNMOUNTED';\n/**\n * @param {Object} [options]\n * @param {String} [options.status]\n * @param {Boolean} [options.mountOnShow]\n * @param {Boolean} [options.transitionOnMount]\n * @param {Boolean} [options.visible]\n * @param {Boolean} [options.unmountOnHide]\n */\n\nexport function computeStatuses(options) {\n  var mountOnShow = options.mountOnShow,\n      status = options.status,\n      transitionOnMount = options.transitionOnMount,\n      visible = options.visible,\n      unmountOnHide = options.unmountOnHide;\n\n  if (visible) {\n    if (status === TRANSITION_STATUS_INITIAL) {\n      if (transitionOnMount) {\n        return {\n          animating: true,\n          status: TRANSITION_STATUS_ENTERING,\n          nextStatus: TRANSITION_STATUS_ENTERED\n        };\n      }\n\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_ENTERED,\n        nextStatus: undefined\n      };\n    }\n\n    if (status === TRANSITION_STATUS_UNMOUNTED) {\n      return {\n        animating: true,\n        status: TRANSITION_STATUS_ENTERING,\n        nextStatus: TRANSITION_STATUS_ENTERED\n      };\n    }\n\n    if (status === TRANSITION_STATUS_EXITED || status === TRANSITION_STATUS_EXITING) {\n      return {\n        animating: true,\n        status: TRANSITION_STATUS_ENTERING,\n        nextStatus: TRANSITION_STATUS_ENTERED\n      };\n    }\n\n    if (status === TRANSITION_STATUS_ENTERING) {\n      return {};\n    }\n    /* istanbul ignore else */\n\n\n    if (status === TRANSITION_STATUS_ENTERED) {\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_ENTERED,\n        nextStatus: undefined\n      };\n    }\n  }\n\n  if (status === TRANSITION_STATUS_INITIAL) {\n    if (mountOnShow || unmountOnHide) {\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_UNMOUNTED,\n        nextStatus: undefined\n      };\n    }\n\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_EXITED,\n      nextStatus: undefined\n    };\n  }\n\n  if (status === TRANSITION_STATUS_ENTERED || status === TRANSITION_STATUS_ENTERING) {\n    return {\n      animating: true,\n      status: TRANSITION_STATUS_EXITING,\n      nextStatus: unmountOnHide ? TRANSITION_STATUS_UNMOUNTED : TRANSITION_STATUS_EXITED\n    };\n  }\n\n  if (status === TRANSITION_STATUS_EXITING) {\n    return {};\n  }\n\n  if (status === TRANSITION_STATUS_EXITED) {\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_EXITED,\n      nextStatus: undefined\n    };\n  }\n  /* istanbul ignore else */\n\n\n  if (status === TRANSITION_STATUS_UNMOUNTED) {\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_UNMOUNTED,\n      nextStatus: undefined\n    };\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Transition:computeStatuses(): an unexpected status transition: { visible: \" + visible + \", status: \" + status + \" }\");\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Transition/utils/computeStatuses.js"],"names":["TRANSITION_STATUS_INITIAL","TRANSITION_STATUS_ENTERED","TRANSITION_STATUS_ENTERING","TRANSITION_STATUS_EXITED","TRANSITION_STATUS_EXITING","TRANSITION_STATUS_UNMOUNTED","computeStatuses","options","mountOnShow","status","transitionOnMount","visible","unmountOnHide","animating","nextStatus","undefined","Error"],"mappings":"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","sourcesContent":["export var TRANSITION_STATUS_INITIAL = 'INITIAL';\nexport var TRANSITION_STATUS_ENTERED = 'ENTERED';\nexport var TRANSITION_STATUS_ENTERING = 'ENTERING';\nexport var TRANSITION_STATUS_EXITED = 'EXITED';\nexport var TRANSITION_STATUS_EXITING = 'EXITING';\nexport var TRANSITION_STATUS_UNMOUNTED = 'UNMOUNTED';\n/**\n * @param {Object} [options]\n * @param {String} [options.status]\n * @param {Boolean} [options.mountOnShow]\n * @param {Boolean} [options.transitionOnMount]\n * @param {Boolean} [options.visible]\n * @param {Boolean} [options.unmountOnHide]\n */\n\nexport function computeStatuses(options) {\n  var mountOnShow = options.mountOnShow,\n      status = options.status,\n      transitionOnMount = options.transitionOnMount,\n      visible = options.visible,\n      unmountOnHide = options.unmountOnHide;\n\n  if (visible) {\n    if (status === TRANSITION_STATUS_INITIAL) {\n      if (transitionOnMount) {\n        return {\n          animating: true,\n          status: TRANSITION_STATUS_ENTERING,\n          nextStatus: TRANSITION_STATUS_ENTERED\n        };\n      }\n\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_ENTERED,\n        nextStatus: undefined\n      };\n    }\n\n    if (status === TRANSITION_STATUS_UNMOUNTED) {\n      return {\n        animating: true,\n        status: TRANSITION_STATUS_ENTERING,\n        nextStatus: TRANSITION_STATUS_ENTERED\n      };\n    }\n\n    if (status === TRANSITION_STATUS_EXITED || status === TRANSITION_STATUS_EXITING) {\n      return {\n        animating: true,\n        status: TRANSITION_STATUS_ENTERING,\n        nextStatus: TRANSITION_STATUS_ENTERED\n      };\n    }\n\n    if (status === TRANSITION_STATUS_ENTERING) {\n      return {};\n    }\n    /* istanbul ignore else */\n\n\n    if (status === TRANSITION_STATUS_ENTERED) {\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_ENTERED,\n        nextStatus: undefined\n      };\n    }\n  }\n\n  if (status === TRANSITION_STATUS_INITIAL) {\n    if (mountOnShow || unmountOnHide) {\n      return {\n        animating: false,\n        status: TRANSITION_STATUS_UNMOUNTED,\n        nextStatus: undefined\n      };\n    }\n\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_EXITED,\n      nextStatus: undefined\n    };\n  }\n\n  if (status === TRANSITION_STATUS_ENTERED || status === TRANSITION_STATUS_ENTERING) {\n    return {\n      animating: true,\n      status: TRANSITION_STATUS_EXITING,\n      nextStatus: unmountOnHide ? TRANSITION_STATUS_UNMOUNTED : TRANSITION_STATUS_EXITED\n    };\n  }\n\n  if (status === TRANSITION_STATUS_EXITING) {\n    return {};\n  }\n\n  if (status === TRANSITION_STATUS_EXITED) {\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_EXITED,\n      nextStatus: undefined\n    };\n  }\n  /* istanbul ignore else */\n\n\n  if (status === TRANSITION_STATUS_UNMOUNTED) {\n    return {\n      animating: false,\n      status: TRANSITION_STATUS_UNMOUNTED,\n      nextStatus: undefined\n    };\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Transition:computeStatuses(): an unexpected status transition: { visible: \" + visible + \", status: \" + status + \" }\");\n}"]},"metadata":{},"sourceType":"module"}