{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport { handleRef } from './utils';\nexport var RefForward = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RefForward, _React$Component);\n\n  function RefForward() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.currentNode = null;\n\n    _this.handleRefOverride = function (node) {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          innerRef = _this$props.innerRef;\n      handleRef(children.ref, node);\n      handleRef(innerRef, node);\n      _this.currentNode = node;\n    };\n\n    return _this;\n  }\n\n  var _proto = RefForward.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    delete this.currentNode;\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return /*#__PURE__*/React.cloneElement(children, {\n      ref: this.handleRefOverride\n    });\n  };\n\n  return RefForward;\n}(React.Component);","map":{"version":3,"sources":["RefForward.tsx"],"names":["RefForward","React","children","innerRef","handleRef","componentDidUpdate","prevProps","componentWillUnmount","render","ref","handleRefOverride"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,SAAA;AAEA,OAAA,IAAaA,UAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,cAAA,CAAA,UAAA,EAAA,gBAAA,CAAA;;AAAA,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA;AAAA,IAAA,KAAA,CAAA,WAAA,GAAA,IAAA;;AAAA,IAAA,KAAA,CAAA,iBAAA,GAGsB,UAAA,IAAA,EAAuB;AAAA,UAAA,WAAA,GACV,KAAA,CADU,KAAA;AAAA,UACjCE,QADiC,GAAA,WAAA,CAAA,QAAA;AAAA,UACvBC,QADuB,GAAA,WAAA,CAAA,QAAA;AAGzCC,MAAAA,SAAS,CAAEF,QAAD,CAAD,GAAA,EAATE,IAAS,CAATA;AACAA,MAAAA,SAAS,CAAA,QAAA,EAATA,IAAS,CAATA;AAEA,MAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AATJ,KAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,MAAA,MAAA,GAAA,UAAA,CAAA,SAAA;;AAAA,EAAA,MAAA,CAAA,kBAAA,GAYEC,SAAAA,kBAAAA,CAAAA,SAAAA,EAAwC;AACtC,QAAIC,SAAS,CAATA,QAAAA,KAAuB,KAAA,KAAA,CAA3B,QAAA,EAAgD;AAC9CF,MAAAA,SAAS,CAAC,KAAA,KAAA,CAAD,QAAA,EAAsB,KAA/BA,WAAS,CAATA;AACD;AAfL,GAAA;;AAAA,EAAA,MAAA,CAAA,oBAAA,GAkBEG,SAAAA,oBAAAA,GAAuB;AACrB,WAAO,KAAP,WAAA;AAnBJ,GAAA;;AAAA,EAAA,MAAA,CAAA,MAAA,GAsBEC,SAAAA,MAAAA,GAAS;AAAA,QACCN,QADD,GACc,KADd,KACc,CADd,QAAA;AAGP,WAAA,aAAO,KAAK,CAAL,YAAA,CAAA,QAAA,EAA6B;AAClCO,MAAAA,GAAG,EAAE,KAAKC;AADwB,KAA7B,CAAP;AAzBJ,GAAA;;AAAA,SAAA,UAAA;AAAA,CAAA,CAAgCT,KAAK,CAArC,SAAA,CAAA","sourcesContent":["import * as React from 'react';\nimport { handleRef, RefProps } from './utils';\n\nexport class RefForward extends React.Component<RefProps> {\n  currentNode: Node | null = null;\n\n  handleRefOverride = (node: HTMLElement) => {\n    const { children, innerRef } = this.props;\n\n    handleRef((children as React.ReactElement & { ref: React.Ref<any> }).ref, node);\n    handleRef(innerRef, node);\n\n    this.currentNode = node;\n  };\n\n  componentDidUpdate(prevProps: RefProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  }\n\n  componentWillUnmount() {\n    delete this.currentNode;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return React.cloneElement(children, {\n      ref: this.handleRefOverride,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}