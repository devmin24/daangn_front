{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _includes from \"lodash-es/includes\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { handleRef } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Input, _Component);\n\n  function Input() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n\n    _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    };\n\n    _this.focus = function () {\n      return _this.inputRef.current.focus();\n    };\n\n    _this.select = function () {\n      return _this.inputRef.current.select();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    };\n\n    _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          htmlInputProps = _partitionHTMLProps[0],\n          rest = _partitionHTMLProps[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    };\n\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        action = _this$props4.action,\n        actionPosition = _this$props4.actionPosition,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        disabled = _this$props4.disabled,\n        error = _this$props4.error,\n        fluid = _this$props4.fluid,\n        focus = _this$props4.focus,\n        icon = _this$props4.icon,\n        iconPosition = _this$props4.iconPosition,\n        input = _this$props4.input,\n        inverted = _this$props4.inverted,\n        label = _this$props4.label,\n        labelPosition = _this$props4.labelPosition,\n        loading = _this$props4.loading,\n        size = _this$props4.size,\n        transparent = _this$props4.transparent,\n        type = _this$props4.type;\n    var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n    var ElementType = getElementType(Input, this.props);\n\n    var _this$partitionProps = this.partitionProps(),\n        htmlInputProps = _this$partitionProps[0],\n        rest = _this$partitionProps[1]; // Render with children\n    // ----------------------------------------\n\n\n    if (!childrenUtils.isNil(children)) {\n      // add htmlInputProps to the `<input />` child\n      var childElements = _map(Children.toArray(children), function (child) {\n        if (child.type !== 'input') return child;\n        return /*#__PURE__*/cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n      });\n\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childElements);\n    } // Render Shorthand\n    // ----------------------------------------\n\n\n    var actionElement = Button.create(action, {\n      autoGenerateKey: false\n    });\n    var labelElement = Label.create(label, {\n      defaultProps: {\n        className: cx('label', // add 'left|right corner'\n        _includes(labelPosition, 'corner') && labelPosition)\n      },\n      autoGenerateKey: false\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n      defaultProps: htmlInputProps,\n      autoGenerateKey: false\n    }), Icon.create(this.computeIcon(), {\n      autoGenerateKey: false\n    }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n  };\n\n  return Input;\n}(Component);\n\nInput.handledProps = [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.defaultProps = {\n  type: 'text'\n};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/elements/Input/Input.js"],"names":["_extends","_inheritsLoose","_includes","_map","_invoke","_get","_isNil","handleRef","cx","PropTypes","React","Children","cloneElement","Component","createRef","childrenUtils","createHTMLInput","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","partitionHTMLProps","useKeyOnly","useValueAndKey","Button","Icon","Label","Input","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","inputRef","computeIcon","_this$props","props","loading","icon","computeTabIndex","_this$props2","disabled","tabIndex","focus","current","select","handleChange","e","value","handleChildOverrides","child","defaultProps","ref","c","partitionProps","_this$props3","type","unhandled","_partitionHTMLProps","htmlInputProps","rest","onChange","_proto","prototype","render","_this2","_this$props4","action","actionPosition","children","className","error","fluid","iconPosition","input","inverted","label","labelPosition","size","transparent","classes","ElementType","_this$partitionProps","isNil","childElements","toArray","createElement","actionElement","create","autoGenerateKey","labelElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","oneOfType","bool","itemShorthand","oneOf","node","string","func","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _includes from \"lodash-es/includes\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { handleRef } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Input, _Component);\n\n  function Input() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n\n    _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    };\n\n    _this.focus = function () {\n      return _this.inputRef.current.focus();\n    };\n\n    _this.select = function () {\n      return _this.inputRef.current.select();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    };\n\n    _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          htmlInputProps = _partitionHTMLProps[0],\n          rest = _partitionHTMLProps[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    };\n\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        action = _this$props4.action,\n        actionPosition = _this$props4.actionPosition,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        disabled = _this$props4.disabled,\n        error = _this$props4.error,\n        fluid = _this$props4.fluid,\n        focus = _this$props4.focus,\n        icon = _this$props4.icon,\n        iconPosition = _this$props4.iconPosition,\n        input = _this$props4.input,\n        inverted = _this$props4.inverted,\n        label = _this$props4.label,\n        labelPosition = _this$props4.labelPosition,\n        loading = _this$props4.loading,\n        size = _this$props4.size,\n        transparent = _this$props4.transparent,\n        type = _this$props4.type;\n    var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n    var ElementType = getElementType(Input, this.props);\n\n    var _this$partitionProps = this.partitionProps(),\n        htmlInputProps = _this$partitionProps[0],\n        rest = _this$partitionProps[1]; // Render with children\n    // ----------------------------------------\n\n\n    if (!childrenUtils.isNil(children)) {\n      // add htmlInputProps to the `<input />` child\n      var childElements = _map(Children.toArray(children), function (child) {\n        if (child.type !== 'input') return child;\n        return /*#__PURE__*/cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n      });\n\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childElements);\n    } // Render Shorthand\n    // ----------------------------------------\n\n\n    var actionElement = Button.create(action, {\n      autoGenerateKey: false\n    });\n    var labelElement = Label.create(label, {\n      defaultProps: {\n        className: cx('label', // add 'left|right corner'\n        _includes(labelPosition, 'corner') && labelPosition)\n      },\n      autoGenerateKey: false\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n      defaultProps: htmlInputProps,\n      autoGenerateKey: false\n    }), Icon.create(this.computeIcon(), {\n      autoGenerateKey: false\n    }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n  };\n\n  return Input;\n}(Component);\n\nInput.handledProps = [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.defaultProps = {\n  type: 'text'\n};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;"]},"metadata":{},"sourceType":"module"}