{"ast":null,"code":"export var numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n};\n/**\n * Return the number word for numbers 1-16.\n * Returns strings or numbers as is if there is no corresponding word.\n * Returns an empty string if value is not a string or number.\n * @param {string|number} value The value to convert to a word.\n * @returns {string}\n */\n\nexport function numberToWord(value) {\n  var type = typeof value;\n\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/lib/numberToWord.js"],"names":["numberToWordMap","numberToWord","value","type"],"mappings":"AAAA,OAAO,IAAIA,eAAe,GAAG;AAC3B,KAAG,KADwB;AAE3B,KAAG,KAFwB;AAG3B,KAAG,OAHwB;AAI3B,KAAG,MAJwB;AAK3B,KAAG,MALwB;AAM3B,KAAG,KANwB;AAO3B,KAAG,OAPwB;AAQ3B,KAAG,OARwB;AAS3B,KAAG,MATwB;AAU3B,MAAI,KAVuB;AAW3B,MAAI,QAXuB;AAY3B,MAAI,QAZuB;AAa3B,MAAI,UAbuB;AAc3B,MAAI,UAduB;AAe3B,MAAI,SAfuB;AAgB3B,MAAI;AAhBuB,CAAtB;AAkBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,MAAIC,IAAI,GAAG,OAAOD,KAAlB;;AAEA,MAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAAlC,EAA4C;AAC1C,WAAOH,eAAe,CAACE,KAAD,CAAf,IAA0BA,KAAjC;AACD;;AAED,SAAO,EAAP;AACD","sourcesContent":["export var numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n};\n/**\n * Return the number word for numbers 1-16.\n * Returns strings or numbers as is if there is no corresponding word.\n * Returns an empty string if value is not a string or number.\n * @param {string|number} value The value to convert to a word.\n * @returns {string}\n */\n\nexport function numberToWord(value) {\n  var type = typeof value;\n\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}"]},"metadata":{},"sourceType":"module"}