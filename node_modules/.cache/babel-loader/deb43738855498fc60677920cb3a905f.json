{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _pick from \"lodash-es/pick\";\nimport _includes from \"lodash-es/includes\";\nimport _reduce from \"lodash-es/reduce\";\nimport _isEmpty from \"lodash-es/isEmpty\";\nimport _invoke from \"lodash-es/invoke\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef, isValidElement } from 'react';\nimport shallowEqual from 'shallowequal';\nimport { ModernAutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Portal from '../../addons/Portal';\nimport ModalActions from './ModalActions';\nimport ModalContent from './ModalContent';\nimport ModalDescription from './ModalDescription';\nimport ModalDimmer from './ModalDimmer';\nimport ModalHeader from './ModalHeader';\nimport { canFit, getLegacyStyles, isLegacy } from './utils';\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\n\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.legacy = isBrowser() && isLegacy();\n    _this.ref = /*#__PURE__*/createRef();\n    _this.dimmerRef = /*#__PURE__*/createRef();\n    _this.latestDocumentMouseDownEvent = null;\n\n    _this.getMountNode = function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    };\n\n    _this.handleActionsOverrides = function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleClose = function (e) {\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleDocumentMouseDown = function (e) {\n      _this.latestDocumentMouseDownEvent = e;\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;\n      _this.latestDocumentMouseDownEvent = null;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref.current, currentDocumentMouseDownEvent) || doesNodeContainClick(_this.ref.current, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleOpen = function (e) {\n      _invoke(_this.props, 'onOpen', e, _extends({}, _this.props, {\n        open: true\n      }));\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handlePortalMount = function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    };\n\n    _this.handlePortalUnmount = function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    };\n\n    _this.setPositionAndClassNames = function () {\n      var centered = _this.props.centered;\n      var scrolling;\n      var newState = {};\n\n      if (_this.ref.current) {\n        var rect = _this.ref.current.getBoundingClientRect();\n\n        var isFitted = canFit(rect);\n        scrolling = !isFitted; // Styles should be computed for IE11\n\n        var legacyStyles = _this.legacy ? getLegacyStyles(isFitted, centered, rect) : {};\n\n        if (!shallowEqual(_this.state.legacyStyles, legacyStyles)) {\n          newState.legacyStyles = legacyStyles;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n      }\n\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n    };\n\n    _this.renderContent = function (rest) {\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          basic = _this$props.basic,\n          children = _this$props.children,\n          className = _this$props.className,\n          closeIcon = _this$props.closeIcon,\n          content = _this$props.content,\n          header = _this$props.header,\n          size = _this$props.size,\n          style = _this$props.style;\n      var _this$state = _this.state,\n          legacyStyles = _this$state.legacyStyles,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(_this.legacy, 'legacy'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n      return /*#__PURE__*/React.createElement(Ref, {\n        innerRef: _this.ref\n      }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _extends({}, legacyStyles, style)\n      }), closeIconJSX, childrenUtils.isNil(children) ? /*#__PURE__*/React.createElement(React.Fragment, null, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })) : children));\n    };\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.handlePortalUnmount();\n  } // Do not access document when server side rendering\n  ;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        centered = _this$props2.centered,\n        closeOnDocumentClick = _this$props2.closeOnDocumentClick,\n        dimmer = _this$props2.dimmer,\n        eventPool = _this$props2.eventPool,\n        trigger = _this$props2.trigger;\n    var _this$state2 = this.state,\n        open = _this$state2.open,\n        scrolling = _this$state2.scrolling;\n    var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n    if (!isBrowser()) {\n      return /*#__PURE__*/isValidElement(trigger) ? trigger : null;\n    }\n\n    var unhandled = getUnhandledProps(Modal, this.props);\n    var portalPropNames = Portal.handledProps;\n\n    var rest = _reduce(unhandled, function (acc, val, key) {\n      if (!_includes(portalPropNames, key)) acc[key] = val;\n      return acc;\n    }, {});\n\n    var portalProps = _pick(unhandled, portalPropNames); // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n\n    return /*#__PURE__*/React.createElement(Portal, _extends({\n      closeOnDocumentClick: closeOnDocumentClick\n    }, portalProps, {\n      trigger: trigger,\n      eventPool: eventPool,\n      mountNode: mountNode,\n      open: open,\n      onClose: this.handleClose,\n      onMount: this.handlePortalMount,\n      onOpen: this.handleOpen,\n      onUnmount: this.handlePortalUnmount\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.dimmerRef\n    }, ModalDimmer.create(_isPlainObject(dimmer) ? dimmer : {}, {\n      autoGenerateKey: false,\n      defaultProps: {\n        blurring: dimmer === 'blurring',\n        inverted: dimmer === 'inverted'\n      },\n      overrideProps: {\n        children: this.renderContent(rest),\n        centered: centered,\n        mountNode: mountNode,\n        scrolling: scrolling\n      }\n    })));\n  };\n\n  return Modal;\n}(Component);\n\nModal.handledProps = [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"];\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object, PropTypes.oneOf(['inverted', 'blurring'])]),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nModal.defaultProps = {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n};\nModal.autoControlledProps = ['open'];\nModal.Actions = ModalActions;\nModal.Content = ModalContent;\nModal.Description = ModalDescription;\nModal.Dimmer = ModalDimmer;\nModal.Header = ModalHeader;\nexport default Modal;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Modal/Modal.js"],"names":["_extends","_inheritsLoose","_isPlainObject","_pick","_includes","_reduce","_isEmpty","_invoke","Ref","cx","PropTypes","React","createRef","isValidElement","shallowEqual","ModernAutoControlledComponent","Component","childrenUtils","customPropTypes","doesNodeContainClick","eventStack","getElementType","getUnhandledProps","isBrowser","useKeyOnly","Icon","Portal","ModalActions","ModalContent","ModalDescription","ModalDimmer","ModalHeader","canFit","getLegacyStyles","isLegacy","Modal","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","legacy","ref","dimmerRef","latestDocumentMouseDownEvent","getMountNode","props","mountNode","document","body","handleActionsOverrides","predefinedProps","onActionClick","e","actionProps","handleClose","open","setState","handleDocumentMouseDown","handleDocumentClick","closeOnDimmerClick","currentDocumentMouseDownEvent","current","handleIconOverrides","onClick","handleOpen","handlePortalMount","eventPool","scrolling","setPositionAndClassNames","sub","pool","target","handlePortalUnmount","cancelAnimationFrame","animationRequestId","unsub","centered","newState","rect","getBoundingClientRect","isFitted","legacyStyles","state","requestAnimationFrame","renderContent","rest","_this$props","actions","basic","children","className","closeIcon","content","header","size","style","_this$state","classes","ElementType","closeIconName","closeIconJSX","create","overrideProps","createElement","innerRef","isNil","Fragment","autoGenerateKey","_proto","prototype","componentWillUnmount","render","_this$props2","closeOnDocumentClick","dimmer","trigger","_this$state2","unhandled","portalPropNames","handledProps","acc","val","key","portalProps","onClose","onMount","onOpen","onUnmount","defaultProps","blurring","inverted","propTypes","process","env","NODE_ENV","as","elementType","itemShorthand","bool","node","string","oneOfType","object","defaultOpen","func","oneOf","any","autoControlledProps","Actions","Content","Description","Dimmer","Header"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _pick from \"lodash-es/pick\";\nimport _includes from \"lodash-es/includes\";\nimport _reduce from \"lodash-es/reduce\";\nimport _isEmpty from \"lodash-es/isEmpty\";\nimport _invoke from \"lodash-es/invoke\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef, isValidElement } from 'react';\nimport shallowEqual from 'shallowequal';\nimport { ModernAutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Portal from '../../addons/Portal';\nimport ModalActions from './ModalActions';\nimport ModalContent from './ModalContent';\nimport ModalDescription from './ModalDescription';\nimport ModalDimmer from './ModalDimmer';\nimport ModalHeader from './ModalHeader';\nimport { canFit, getLegacyStyles, isLegacy } from './utils';\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.legacy = isBrowser() && isLegacy();\n    _this.ref = /*#__PURE__*/createRef();\n    _this.dimmerRef = /*#__PURE__*/createRef();\n    _this.latestDocumentMouseDownEvent = null;\n\n    _this.getMountNode = function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    };\n\n    _this.handleActionsOverrides = function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleClose = function (e) {\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleDocumentMouseDown = function (e) {\n      _this.latestDocumentMouseDownEvent = e;\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;\n      _this.latestDocumentMouseDownEvent = null;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref.current, currentDocumentMouseDownEvent) || doesNodeContainClick(_this.ref.current, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleOpen = function (e) {\n      _invoke(_this.props, 'onOpen', e, _extends({}, _this.props, {\n        open: true\n      }));\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handlePortalMount = function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    };\n\n    _this.handlePortalUnmount = function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    };\n\n    _this.setPositionAndClassNames = function () {\n      var centered = _this.props.centered;\n      var scrolling;\n      var newState = {};\n\n      if (_this.ref.current) {\n        var rect = _this.ref.current.getBoundingClientRect();\n\n        var isFitted = canFit(rect);\n        scrolling = !isFitted; // Styles should be computed for IE11\n\n        var legacyStyles = _this.legacy ? getLegacyStyles(isFitted, centered, rect) : {};\n\n        if (!shallowEqual(_this.state.legacyStyles, legacyStyles)) {\n          newState.legacyStyles = legacyStyles;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n      }\n\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n    };\n\n    _this.renderContent = function (rest) {\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          basic = _this$props.basic,\n          children = _this$props.children,\n          className = _this$props.className,\n          closeIcon = _this$props.closeIcon,\n          content = _this$props.content,\n          header = _this$props.header,\n          size = _this$props.size,\n          style = _this$props.style;\n      var _this$state = _this.state,\n          legacyStyles = _this$state.legacyStyles,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(_this.legacy, 'legacy'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n      return /*#__PURE__*/React.createElement(Ref, {\n        innerRef: _this.ref\n      }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _extends({}, legacyStyles, style)\n      }), closeIconJSX, childrenUtils.isNil(children) ? /*#__PURE__*/React.createElement(React.Fragment, null, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })) : children));\n    };\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.handlePortalUnmount();\n  } // Do not access document when server side rendering\n  ;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        centered = _this$props2.centered,\n        closeOnDocumentClick = _this$props2.closeOnDocumentClick,\n        dimmer = _this$props2.dimmer,\n        eventPool = _this$props2.eventPool,\n        trigger = _this$props2.trigger;\n    var _this$state2 = this.state,\n        open = _this$state2.open,\n        scrolling = _this$state2.scrolling;\n    var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n    if (!isBrowser()) {\n      return /*#__PURE__*/isValidElement(trigger) ? trigger : null;\n    }\n\n    var unhandled = getUnhandledProps(Modal, this.props);\n    var portalPropNames = Portal.handledProps;\n\n    var rest = _reduce(unhandled, function (acc, val, key) {\n      if (!_includes(portalPropNames, key)) acc[key] = val;\n      return acc;\n    }, {});\n\n    var portalProps = _pick(unhandled, portalPropNames); // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n\n    return /*#__PURE__*/React.createElement(Portal, _extends({\n      closeOnDocumentClick: closeOnDocumentClick\n    }, portalProps, {\n      trigger: trigger,\n      eventPool: eventPool,\n      mountNode: mountNode,\n      open: open,\n      onClose: this.handleClose,\n      onMount: this.handlePortalMount,\n      onOpen: this.handleOpen,\n      onUnmount: this.handlePortalUnmount\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.dimmerRef\n    }, ModalDimmer.create(_isPlainObject(dimmer) ? dimmer : {}, {\n      autoGenerateKey: false,\n      defaultProps: {\n        blurring: dimmer === 'blurring',\n        inverted: dimmer === 'inverted'\n      },\n      overrideProps: {\n        children: this.renderContent(rest),\n        centered: centered,\n        mountNode: mountNode,\n        scrolling: scrolling\n      }\n    })));\n  };\n\n  return Modal;\n}(Component);\n\nModal.handledProps = [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"];\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object, PropTypes.oneOf(['inverted', 'blurring'])]),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nModal.defaultProps = {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n};\nModal.autoControlledProps = ['open'];\nModal.Actions = ModalActions;\nModal.Content = ModalContent;\nModal.Description = ModalDescription;\nModal.Dimmer = ModalDimmer;\nModal.Header = ModalHeader;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}