{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\n/**\n * A modal can contain a row of actions.\n */\n\nvar ModalActions = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalActions, _Component);\n\n  function ModalActions() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleButtonOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onActionClick', e, buttonProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = ModalActions.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        actions = _this$props.actions,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content;\n    var classes = cx('actions', className);\n    var rest = getUnhandledProps(ModalActions, this.props);\n    var ElementType = getElementType(ModalActions, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), _map(actions, function (action) {\n      return Button.create(action, {\n        overrideProps: _this2.handleButtonOverrides\n      });\n    }));\n  };\n\n  return ModalActions;\n}(Component);\n\nModalActions.handledProps = [\"actions\", \"as\", \"children\", \"className\", \"content\", \"onActionClick\"];\nexport { ModalActions as default };\nModalActions.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Array of shorthand buttons. */\n  actions: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props from the clicked action.\n   */\n  onActionClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func])\n} : {};\nModalActions.create = createShorthandFactory(ModalActions, function (actions) {\n  return {\n    actions: actions\n  };\n});","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Modal/ModalActions.js"],"names":["_extends","_inheritsLoose","_map","_invoke","cx","PropTypes","React","Component","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","Button","ModalActions","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleButtonOverrides","predefinedProps","onClick","e","buttonProps","props","_proto","prototype","render","_this2","_this$props","actions","children","className","content","classes","rest","ElementType","isNil","createElement","action","create","overrideProps","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","collectionShorthand","node","string","contentShorthand","onActionClick","every","disallow","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\n/**\n * A modal can contain a row of actions.\n */\n\nvar ModalActions = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalActions, _Component);\n\n  function ModalActions() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleButtonOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onActionClick', e, buttonProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = ModalActions.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        actions = _this$props.actions,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content;\n    var classes = cx('actions', className);\n    var rest = getUnhandledProps(ModalActions, this.props);\n    var ElementType = getElementType(ModalActions, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), _map(actions, function (action) {\n      return Button.create(action, {\n        overrideProps: _this2.handleButtonOverrides\n      });\n    }));\n  };\n\n  return ModalActions;\n}(Component);\n\nModalActions.handledProps = [\"actions\", \"as\", \"children\", \"className\", \"content\", \"onActionClick\"];\nexport { ModalActions as default };\nModalActions.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Array of shorthand buttons. */\n  actions: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props from the clicked action.\n   */\n  onActionClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func])\n} : {};\nModalActions.create = createShorthandFactory(ModalActions, function (actions) {\n  return {\n    actions: actions\n  };\n});"]},"metadata":{},"sourceType":"module"}