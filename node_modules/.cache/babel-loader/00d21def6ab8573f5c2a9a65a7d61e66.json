{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from\"redux\";import thunk from\"redux-thunk\";import{createBrowserHistory}from\"history\";import{connectRouter}from\"connected-react-router\";// import User from \"./modules/user\";\nimport Post from\"./modules/post\";export var history=createBrowserHistory();var rootReducer=combineReducers({// user: User,\npost:Post,router:connectRouter(history)});var middlewares=[thunk.withExtraArgument({history:history})];// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nvar env=process.env.NODE_ENV;// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif(env===\"development\"){var _require=require(\"redux-logger\"),logger=_require.logger;middlewares.push(logger);}var composeEnhancers=typeof window===\"object\"&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}):compose;var enhancer=composeEnhancers(applyMiddleware.apply(void 0,middlewares));var store=function store(initialStore){return createStore(rootReducer,enhancer);};export default store();","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","Post","history","rootReducer","post","router","middlewares","withExtraArgument","env","process","NODE_ENV","require","logger","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGH,oBAAoB,EAApC,CAEP,GAAMI,CAAAA,WAAW,CAAGR,eAAe,CAAC,CAClC;AACAS,IAAI,CAAEH,IAF4B,CAGlCI,MAAM,CAAEL,aAAa,CAACE,OAAD,CAHa,CAAD,CAAnC,CAMA,GAAMI,CAAAA,WAAW,CAAG,CAACR,KAAK,CAACS,iBAAN,CAAwB,CAAEL,OAAO,CAAEA,OAAX,CAAxB,CAAD,CAApB,CAEA;AACA,GAAMM,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB,CAEA;AACA,GAAIF,GAAG,GAAK,aAAZ,CAA2B,cACNG,OAAO,CAAC,cAAD,CADD,CACjBC,MADiB,UACjBA,MADiB,CAEzBN,WAAW,CAACO,IAAZ,CAAiBD,MAAjB,EACD,CAED,GAAME,CAAAA,gBAAgB,CACpB,MAAOC,CAAAA,MAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACC,oCAArC,CACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,CAIInB,OALN,CAOA,GAAMoB,CAAAA,QAAQ,CAAGH,gBAAgB,CAAClB,eAAe,MAAf,QAAmBU,WAAnB,CAAD,CAAjC,CAEA,GAAIY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,YAAD,QAAkBzB,CAAAA,WAAW,CAACS,WAAD,CAAcc,QAAd,CAA7B,EAAZ,CAEA,cAAeC,CAAAA,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\n// import User from \"./modules/user\";\nimport Post from \"./modules/post\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  // user: User,\n  post: Post,\n  router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n"]},"metadata":{},"sourceType":"module"}