{"ast":null,"code":"import _some from \"lodash-es/some\";\nimport _escapeRegExp from \"lodash-es/escapeRegExp\";\nimport _deburr from \"lodash-es/deburr\";\nimport _isFunction from \"lodash-es/isFunction\";\nimport _includes from \"lodash-es/includes\";\nimport _filter from \"lodash-es/filter\";\nimport React from 'react'; // There are times when we need to calculate the options based on a value\n// that hasn't yet been persisted to state.\n\nexport default function getMenuOptions(config) {\n  var additionLabel = config.additionLabel,\n      additionPosition = config.additionPosition,\n      allowAdditions = config.allowAdditions,\n      deburr = config.deburr,\n      multiple = config.multiple,\n      options = config.options,\n      search = config.search,\n      searchQuery = config.searchQuery,\n      value = config.value;\n  var filteredOptions = options; // filter out active options\n\n  if (multiple) {\n    filteredOptions = _filter(filteredOptions, function (opt) {\n      return !_includes(value, opt.value);\n    });\n  } // filter by search query\n\n\n  if (search && searchQuery) {\n    if (_isFunction(search)) {\n      filteredOptions = search(filteredOptions, searchQuery);\n    } else {\n      // remove diacritics on search input and options, if deburr prop is set\n      var strippedQuery = deburr ? _deburr(searchQuery) : searchQuery;\n      var re = new RegExp(_escapeRegExp(strippedQuery), 'i');\n      filteredOptions = _filter(filteredOptions, function (opt) {\n        return re.test(deburr ? _deburr(opt.text) : opt.text);\n      });\n    }\n  } // insert the \"add\" item\n\n\n  if (allowAdditions && search && searchQuery && !_some(filteredOptions, {\n    text: searchQuery\n  })) {\n    var additionLabelElement = /*#__PURE__*/React.isValidElement(additionLabel) ? /*#__PURE__*/React.cloneElement(additionLabel, {\n      key: 'addition-label'\n    }) : additionLabel || '';\n    var addItem = {\n      key: 'addition',\n      // by using an array, we can pass multiple elements, but when doing so\n      // we must specify a `key` for React to know which one is which\n      text: [additionLabelElement, /*#__PURE__*/React.createElement(\"b\", {\n        key: \"addition-query\"\n      }, searchQuery)],\n      value: searchQuery,\n      className: 'addition',\n      'data-additional': true\n    };\n    if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);\n  }\n\n  return filteredOptions;\n}\ngetMenuOptions.handledProps = [];","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Dropdown/utils/getMenuOptions.js"],"names":["_some","_escapeRegExp","_deburr","_isFunction","_includes","_filter","React","getMenuOptions","config","additionLabel","additionPosition","allowAdditions","deburr","multiple","options","search","searchQuery","value","filteredOptions","opt","strippedQuery","re","RegExp","test","text","additionLabelElement","isValidElement","cloneElement","key","addItem","createElement","className","unshift","push","handledProps"],"mappings":"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","sourcesContent":["import _some from \"lodash-es/some\";\nimport _escapeRegExp from \"lodash-es/escapeRegExp\";\nimport _deburr from \"lodash-es/deburr\";\nimport _isFunction from \"lodash-es/isFunction\";\nimport _includes from \"lodash-es/includes\";\nimport _filter from \"lodash-es/filter\";\nimport React from 'react'; // There are times when we need to calculate the options based on a value\n// that hasn't yet been persisted to state.\n\nexport default function getMenuOptions(config) {\n  var additionLabel = config.additionLabel,\n      additionPosition = config.additionPosition,\n      allowAdditions = config.allowAdditions,\n      deburr = config.deburr,\n      multiple = config.multiple,\n      options = config.options,\n      search = config.search,\n      searchQuery = config.searchQuery,\n      value = config.value;\n  var filteredOptions = options; // filter out active options\n\n  if (multiple) {\n    filteredOptions = _filter(filteredOptions, function (opt) {\n      return !_includes(value, opt.value);\n    });\n  } // filter by search query\n\n\n  if (search && searchQuery) {\n    if (_isFunction(search)) {\n      filteredOptions = search(filteredOptions, searchQuery);\n    } else {\n      // remove diacritics on search input and options, if deburr prop is set\n      var strippedQuery = deburr ? _deburr(searchQuery) : searchQuery;\n      var re = new RegExp(_escapeRegExp(strippedQuery), 'i');\n      filteredOptions = _filter(filteredOptions, function (opt) {\n        return re.test(deburr ? _deburr(opt.text) : opt.text);\n      });\n    }\n  } // insert the \"add\" item\n\n\n  if (allowAdditions && search && searchQuery && !_some(filteredOptions, {\n    text: searchQuery\n  })) {\n    var additionLabelElement = /*#__PURE__*/React.isValidElement(additionLabel) ? /*#__PURE__*/React.cloneElement(additionLabel, {\n      key: 'addition-label'\n    }) : additionLabel || '';\n    var addItem = {\n      key: 'addition',\n      // by using an array, we can pass multiple elements, but when doing so\n      // we must specify a `key` for React to know which one is which\n      text: [additionLabelElement, /*#__PURE__*/React.createElement(\"b\", {\n        key: \"addition-query\"\n      }, searchQuery)],\n      value: searchQuery,\n      className: 'addition',\n      'data-additional': true\n    };\n    if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);\n  }\n\n  return filteredOptions;\n}\ngetMenuOptions.handledProps = [];"]},"metadata":{},"sourceType":"module"}