{"ast":null,"code":"import _difference from \"lodash-es/difference\";\nimport _trim from \"lodash-es/trim\";\nimport _isObject from \"lodash-es/isObject\";\nimport _pick from \"lodash-es/pick\";\nimport _keys from \"lodash-es/keys\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _isNil from \"lodash-es/isNil\";\nimport _min from \"lodash-es/min\";\nimport _sum from \"lodash-es/sum\";\nimport _map from \"lodash-es/map\";\nimport _sortBy from \"lodash-es/sortBy\";\nimport _take from \"lodash-es/take\";\nimport _memoize from \"lodash-es/memoize\";\nimport PropTypes from 'prop-types';\nimport leven from './leven';\n\nvar typeOf = function typeOf() {\n  var _Object$prototype$toS;\n\n  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);\n};\n/**\n * Ensure a prop is a valid DOM node.\n */\n\n\nexport var domNode = function domNode(props, propName) {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return; // short circle for SSR env\n\n  if (typeof Element === 'undefined') return; // skip if prop is valid\n\n  if (props[propName] instanceof Element) return;\n  return new Error(\"Invalid prop \\\"\" + propName + \"\\\" supplied, expected a DOM node.\");\n};\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\n\nexport var suggest = function suggest(suggestions) {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n  /* eslint-disable max-nested-callbacks */\n\n\n  var findBestSuggestions = _memoize(function (str) {\n    var propValueWords = str.split(' ');\n    return _take(_sortBy(_map(suggestions, function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n\n      var propValueScore = _sum(_map(_map(propValueWords, function (x) {\n        return _map(suggestionWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      var suggestionScore = _sum(_map(_map(suggestionWords, function (x) {\n        return _map(propValueWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      return {\n        suggestion: suggestion,\n        score: propValueScore + suggestionScore\n      };\n    }), ['score', 'suggestion']), 3);\n  });\n  /* eslint-enable max-nested-callbacks */\n  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n\n\n  var suggestionsLookup = suggestions.reduce(function (acc, key) {\n    acc[key.split(' ').sort().join(' ')] = true;\n    return acc;\n  }, {});\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions\n\n    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n\n    var propValueSorted = propValue.split(' ').sort().join(' ');\n    if (suggestionsLookup[propValueSorted]) return; // find best suggestions\n\n    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0\n\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return;\n    return new Error([\"Invalid prop `\" + propName + \"` of value `\" + propValue + \"` supplied to `\" + componentName + \"`.\", \"\\n\\nInstead of `\" + propValue + \"`, did you mean:\", bestMatches.map(function (x) {\n      return \"\\n  - \" + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n/**\n * Disallow other props from being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\n\nexport var disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (_isNil(props[propName]) || props[propName] === false) {\n      return;\n    } // find disallowed props with values\n\n\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!_isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat(acc, [disallowedProp]);\n      }\n\n      return acc;\n    }, []);\n\n    if (disallowed.length > 0) {\n      return new Error([\"Prop `\" + propName + \"` in `\" + componentName + \"` conflicts with props: `\" + disallowed.join('`, `') + \"`.\", 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n  };\n};\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\n\nexport var every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var errors = [];\n    validators.forEach(function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error(\"every() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n\n      var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n      if (error) {\n        errors.push(error);\n      }\n    }); // we can only return one error at a time\n\n    return errors[0];\n  };\n};\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\n\nexport var givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    if (!_isPlainObject(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var shouldValidate = _keys(propsShape).every(function (key) {\n      var val = propsShape[key]; // require propShape validators to pass or prop values to match\n\n      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];\n    });\n\n    if (!shouldValidate) return;\n    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = \"{ \" + _keys(_pick(_keys(propsShape), props)).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = \"\\\"\" + val + \"\\\"\";else if (Array.isArray(val)) renderedValue = \"[\" + val.join(', ') + \"]\";else if (_isObject(val)) renderedValue = '{...}';\n        return key + \": \" + renderedValue;\n      }).join(', ') + \" }\";\n      error.message = \"Given props \" + prettyProps + \": \" + error.message;\n      return error;\n    }\n  };\n};\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\n\nexport var demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return;\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n\n    if (missingRequired.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` requires props: `\" + missingRequired.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\n\nexport var multipleProp = function multipleProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var propValue = props[propName]; // skip if prop is undefined\n\n    if (_isNil(propValue) || propValue === false) return;\n    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {\n      return _trim(val).replace('-', ' ');\n    });\n\n    var invalid = _difference(values, possible); // fail only if there are invalid values\n\n\n    if (invalid.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` has invalid values: `\" + invalid.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\n\nexport var contentShorthand = function contentShorthand() {\n  return every([disallow(['children']), PropTypes.node]).apply(void 0, arguments);\n};\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\n\nexport var itemShorthand = function itemShorthand() {\n  return every([disallow(['children']), PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object]))])]).apply(void 0, arguments);\n};\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionShorthand = function collectionShorthand() {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]).apply(void 0, arguments);\n};\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\n\nexport var deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return; // deprecation error and help\n\n    var error = new Error(\"The `\" + propName + \"` prop in `\" + componentName + \"` is deprecated.\");\n    if (help) error.message += \" \" + help; // add optional validation error message\n\n    if (validator) {\n      if (typeof validator === 'function') {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n          args[_key3 - 3] = arguments[_key3];\n        }\n\n        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));\n\n        if (validationError) {\n          error.message = error.message + \" \" + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n      }\n    }\n\n    return error;\n  };\n};\n/** A checker that matches the React.RefObject type. */\n\nexport var refObject = PropTypes.shape({\n  current: PropTypes.object\n});\n/** A checker that matches the React.Ref type. */\n\nexport var ref = PropTypes.oneOfType([PropTypes.func, refObject]);","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/lib/customPropTypes.js"],"names":["_difference","_trim","_isObject","_pick","_keys","_isPlainObject","_isNil","_min","_sum","_map","_sortBy","_take","_memoize","PropTypes","leven","typeOf","_Object$prototype$toS","Object","prototype","toString","call","apply","arguments","domNode","props","propName","undefined","Element","Error","suggest","suggestions","Array","isArray","findBestSuggestions","str","propValueWords","split","suggestion","suggestionWords","propValueScore","x","y","suggestionScore","score","suggestionsLookup","reduce","acc","key","sort","join","componentName","propValue","propValueSorted","bestMatches","some","map","disallow","disallowedProps","disallowed","disallowedProp","concat","length","every","validators","_len","rest","_key","errors","forEach","validator","error","push","givenProps","propsShape","_len2","_key2","shouldValidate","val","prettyProps","renderedValue","message","demand","requiredProps","missingRequired","filter","requiredProp","multipleProp","possible","values","replace","invalid","contentShorthand","node","itemShorthand","oneOfType","func","object","arrayOf","collectionShorthand","deprecate","help","_len3","args","_key3","validationError","refObject","shape","current","ref"],"mappings":"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","sourcesContent":["import _difference from \"lodash-es/difference\";\nimport _trim from \"lodash-es/trim\";\nimport _isObject from \"lodash-es/isObject\";\nimport _pick from \"lodash-es/pick\";\nimport _keys from \"lodash-es/keys\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _isNil from \"lodash-es/isNil\";\nimport _min from \"lodash-es/min\";\nimport _sum from \"lodash-es/sum\";\nimport _map from \"lodash-es/map\";\nimport _sortBy from \"lodash-es/sortBy\";\nimport _take from \"lodash-es/take\";\nimport _memoize from \"lodash-es/memoize\";\nimport PropTypes from 'prop-types';\nimport leven from './leven';\n\nvar typeOf = function typeOf() {\n  var _Object$prototype$toS;\n\n  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);\n};\n/**\n * Ensure a prop is a valid DOM node.\n */\n\n\nexport var domNode = function domNode(props, propName) {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return; // short circle for SSR env\n\n  if (typeof Element === 'undefined') return; // skip if prop is valid\n\n  if (props[propName] instanceof Element) return;\n  return new Error(\"Invalid prop \\\"\" + propName + \"\\\" supplied, expected a DOM node.\");\n};\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\n\nexport var suggest = function suggest(suggestions) {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n  /* eslint-disable max-nested-callbacks */\n\n\n  var findBestSuggestions = _memoize(function (str) {\n    var propValueWords = str.split(' ');\n    return _take(_sortBy(_map(suggestions, function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n\n      var propValueScore = _sum(_map(_map(propValueWords, function (x) {\n        return _map(suggestionWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      var suggestionScore = _sum(_map(_map(suggestionWords, function (x) {\n        return _map(propValueWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      return {\n        suggestion: suggestion,\n        score: propValueScore + suggestionScore\n      };\n    }), ['score', 'suggestion']), 3);\n  });\n  /* eslint-enable max-nested-callbacks */\n  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n\n\n  var suggestionsLookup = suggestions.reduce(function (acc, key) {\n    acc[key.split(' ').sort().join(' ')] = true;\n    return acc;\n  }, {});\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions\n\n    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n\n    var propValueSorted = propValue.split(' ').sort().join(' ');\n    if (suggestionsLookup[propValueSorted]) return; // find best suggestions\n\n    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0\n\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return;\n    return new Error([\"Invalid prop `\" + propName + \"` of value `\" + propValue + \"` supplied to `\" + componentName + \"`.\", \"\\n\\nInstead of `\" + propValue + \"`, did you mean:\", bestMatches.map(function (x) {\n      return \"\\n  - \" + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n/**\n * Disallow other props from being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\n\nexport var disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (_isNil(props[propName]) || props[propName] === false) {\n      return;\n    } // find disallowed props with values\n\n\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!_isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat(acc, [disallowedProp]);\n      }\n\n      return acc;\n    }, []);\n\n    if (disallowed.length > 0) {\n      return new Error([\"Prop `\" + propName + \"` in `\" + componentName + \"` conflicts with props: `\" + disallowed.join('`, `') + \"`.\", 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n  };\n};\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\n\nexport var every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var errors = [];\n    validators.forEach(function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error(\"every() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n\n      var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n      if (error) {\n        errors.push(error);\n      }\n    }); // we can only return one error at a time\n\n    return errors[0];\n  };\n};\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\n\nexport var givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    if (!_isPlainObject(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var shouldValidate = _keys(propsShape).every(function (key) {\n      var val = propsShape[key]; // require propShape validators to pass or prop values to match\n\n      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];\n    });\n\n    if (!shouldValidate) return;\n    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = \"{ \" + _keys(_pick(_keys(propsShape), props)).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = \"\\\"\" + val + \"\\\"\";else if (Array.isArray(val)) renderedValue = \"[\" + val.join(', ') + \"]\";else if (_isObject(val)) renderedValue = '{...}';\n        return key + \": \" + renderedValue;\n      }).join(', ') + \" }\";\n      error.message = \"Given props \" + prettyProps + \": \" + error.message;\n      return error;\n    }\n  };\n};\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\n\nexport var demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return;\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n\n    if (missingRequired.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` requires props: `\" + missingRequired.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\n\nexport var multipleProp = function multipleProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var propValue = props[propName]; // skip if prop is undefined\n\n    if (_isNil(propValue) || propValue === false) return;\n    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {\n      return _trim(val).replace('-', ' ');\n    });\n\n    var invalid = _difference(values, possible); // fail only if there are invalid values\n\n\n    if (invalid.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` has invalid values: `\" + invalid.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\n\nexport var contentShorthand = function contentShorthand() {\n  return every([disallow(['children']), PropTypes.node]).apply(void 0, arguments);\n};\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\n\nexport var itemShorthand = function itemShorthand() {\n  return every([disallow(['children']), PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object]))])]).apply(void 0, arguments);\n};\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionShorthand = function collectionShorthand() {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]).apply(void 0, arguments);\n};\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\n\nexport var deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return; // deprecation error and help\n\n    var error = new Error(\"The `\" + propName + \"` prop in `\" + componentName + \"` is deprecated.\");\n    if (help) error.message += \" \" + help; // add optional validation error message\n\n    if (validator) {\n      if (typeof validator === 'function') {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n          args[_key3 - 3] = arguments[_key3];\n        }\n\n        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));\n\n        if (validationError) {\n          error.message = error.message + \" \" + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n      }\n    }\n\n    return error;\n  };\n};\n/** A checker that matches the React.RefObject type. */\n\nexport var refObject = PropTypes.shape({\n  current: PropTypes.object\n});\n/** A checker that matches the React.Ref type. */\n\nexport var ref = PropTypes.oneOfType([PropTypes.func, refObject]);"]},"metadata":{},"sourceType":"module"}