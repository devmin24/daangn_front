{"ast":null,"code":"import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/redux-actions/es/handleActions.js"],"names":["reduceReducers","invariant","isPlainObject","isMap","ownKeys","flattenReducerMap","handleAction","get","handleActions","handlers","defaultState","options","flattenedReducerMap","reducers","map","type","reducer","apply","concat","state","action"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,iBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,YAAjC,EAA+CC,OAA/C,EAAwD;AACrE,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAEDV,EAAAA,SAAS,CAACC,aAAa,CAACO,QAAD,CAAb,IAA2BN,KAAK,CAACM,QAAD,CAAjC,EAA6C,yCAA7C,CAAT;AACA,MAAIG,mBAAmB,GAAGP,iBAAiB,CAACI,QAAD,EAAWE,OAAX,CAA3C;AACA,MAAIE,QAAQ,GAAGT,OAAO,CAACQ,mBAAD,CAAP,CAA6BE,GAA7B,CAAiC,UAAUC,IAAV,EAAgB;AAC9D,WAAOT,YAAY,CAACS,IAAD,EAAOR,GAAG,CAACQ,IAAD,EAAOH,mBAAP,CAAV,EAAuCF,YAAvC,CAAnB;AACD,GAFc,CAAf;AAGA,MAAIM,OAAO,GAAGhB,cAAc,CAACiB,KAAf,CAAqB,KAAK,CAA1B,EAA6BJ,QAAQ,CAACK,MAAT,CAAgB,CAACR,YAAD,CAAhB,CAA7B,CAAd;AACA,SAAO,UAAUS,KAAV,EAAiBC,MAAjB,EAAyB;AAC9B,QAAID,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,MAAAA,KAAK,GAAGT,YAAR;AACD;;AAED,WAAOM,OAAO,CAACG,KAAD,EAAQC,MAAR,CAAd;AACD,GAND;AAOD","sourcesContent":["import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}"]},"metadata":{},"sourceType":"module"}