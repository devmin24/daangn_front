{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/redux-actions/es/createActions.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","invariant","isPlainObject","isFunction","identity","isArray","isString","isNil","getLastElement","camelCase","arrayToObject","flattenActionMap","unflattenActionCreators","createAction","DEFAULT_NAMESPACE","createActions","actionMap","_len","identityActions","Array","_key","options","pop","every","actionCreatorsFromIdentityActions","actionCreatorsFromActionMap","flatActionMap","flatActionCreators","actionMapToActionCreators","_temp","_ref","prefix","_ref$namespace","namespace","isValidActionMapValue","actionMapValue","_actionMapValue$","payload","meta","partialActionCreators","type","_objectSpread2","prefixedType","actionCreator","apply","partialActionMap","_objectSpread3","actionCreators","_objectSpread4"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}"]},"metadata":{},"sourceType":"module"}