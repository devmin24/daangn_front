{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _times from \"lodash-es/times\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport RatingIcon from './RatingIcon';\n/**\n * A rating indicates user interest in content.\n */\n\nvar Rating = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Rating, _Component);\n\n  function Rating() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _this.handleIconClick = function (e, _ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          clearable = _this$props.clearable,\n          disabled = _this$props.disabled,\n          maxRating = _this$props.maxRating,\n          onRate = _this$props.onRate;\n      var rating = _this.state.rating;\n      if (disabled) return; // default newRating is the clicked icon\n      // allow toggling a binary rating\n      // allow clearing ratings\n\n      var newRating = index + 1;\n\n      if (clearable === 'auto' && maxRating === 1) {\n        newRating = +!rating;\n      } else if (clearable === true && newRating === rating) {\n        newRating = 0;\n      } // set rating\n\n\n      _this.setState({\n        rating: newRating,\n        isSelecting: false\n      });\n\n      if (onRate) onRate(e, _extends({}, _this.props, {\n        rating: newRating\n      }));\n    };\n\n    _this.handleIconMouseEnter = function (e, _ref2) {\n      var index = _ref2.index;\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: index,\n        isSelecting: true\n      });\n    };\n\n    _this.handleMouseLeave = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onMouseLeave'].concat(args));\n\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: -1,\n        isSelecting: false\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Rating.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        disabled = _this$props2.disabled,\n        icon = _this$props2.icon,\n        maxRating = _this$props2.maxRating,\n        size = _this$props2.size;\n    var _this$state = this.state,\n        rating = _this$state.rating,\n        selectedIndex = _this$state.selectedIndex,\n        isSelecting = _this$state.isSelecting;\n    var classes = cx('ui', icon, size, useKeyOnly(disabled, 'disabled'), useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);\n    var rest = getUnhandledProps(Rating, this.props);\n    var ElementType = getElementType(Rating, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      role: \"radiogroup\",\n      onMouseLeave: this.handleMouseLeave,\n      tabIndex: disabled ? 0 : -1\n    }), _times(maxRating, function (i) {\n      return /*#__PURE__*/React.createElement(RatingIcon, {\n        tabIndex: disabled ? -1 : 0,\n        active: rating >= i + 1,\n        \"aria-checked\": rating === i + 1,\n        \"aria-posinset\": i + 1,\n        \"aria-setsize\": maxRating,\n        index: i,\n        key: i,\n        onClick: _this2.handleIconClick,\n        onMouseEnter: _this2.handleIconMouseEnter,\n        selected: selectedIndex >= i && isSelecting\n      });\n    }));\n  };\n\n  return Rating;\n}(Component);\n\nRating.handledProps = [\"as\", \"className\", \"clearable\", \"defaultRating\", \"disabled\", \"icon\", \"maxRating\", \"onRate\", \"rating\", \"size\"];\nexport { Rating as default };\nRating.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * You can clear the rating by clicking on the current start rating.\n   * By default a rating will be only clearable if there is 1 icon.\n   * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n   */\n  clearable: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n\n  /** The initial rating value. */\n  defaultRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** You can disable or enable interactive rating.  Makes a read-only rating. */\n  disabled: PropTypes.bool,\n\n  /** A rating can use a set of star or heart icons. */\n  icon: PropTypes.oneOf(['star', 'heart']),\n\n  /** The total number of icons. */\n  maxRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called after user selects a new rating.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed rating.\n   */\n  onRate: PropTypes.func,\n\n  /** The current number of active icons. */\n  rating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium', 'big'))\n} : {};\nRating.autoControlledProps = ['rating'];\nRating.defaultProps = {\n  clearable: 'auto',\n  maxRating: 1\n};\nRating.Icon = RatingIcon;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Rating/Rating.js"],"names":["_extends","_inheritsLoose","_without","_times","_invoke","cx","PropTypes","React","ModernAutoControlledComponent","Component","getElementType","getUnhandledProps","SUI","useKeyOnly","RatingIcon","Rating","_Component","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","handleIconClick","e","_ref","index","_this$props","props","clearable","disabled","maxRating","onRate","rating","state","newRating","setState","isSelecting","handleIconMouseEnter","_ref2","selectedIndex","handleMouseLeave","_len2","args","_key2","_proto","prototype","render","_this2","_this$props2","className","icon","size","_this$state","classes","rest","ElementType","createElement","role","onMouseLeave","tabIndex","i","active","key","onClick","onMouseEnter","selected","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","string","oneOfType","bool","oneOf","defaultRating","number","func","SIZES","autoControlledProps","defaultProps","Icon"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _without from \"lodash-es/without\";\nimport _times from \"lodash-es/times\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport RatingIcon from './RatingIcon';\n/**\n * A rating indicates user interest in content.\n */\n\nvar Rating = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Rating, _Component);\n\n  function Rating() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _this.handleIconClick = function (e, _ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          clearable = _this$props.clearable,\n          disabled = _this$props.disabled,\n          maxRating = _this$props.maxRating,\n          onRate = _this$props.onRate;\n      var rating = _this.state.rating;\n      if (disabled) return; // default newRating is the clicked icon\n      // allow toggling a binary rating\n      // allow clearing ratings\n\n      var newRating = index + 1;\n\n      if (clearable === 'auto' && maxRating === 1) {\n        newRating = +!rating;\n      } else if (clearable === true && newRating === rating) {\n        newRating = 0;\n      } // set rating\n\n\n      _this.setState({\n        rating: newRating,\n        isSelecting: false\n      });\n\n      if (onRate) onRate(e, _extends({}, _this.props, {\n        rating: newRating\n      }));\n    };\n\n    _this.handleIconMouseEnter = function (e, _ref2) {\n      var index = _ref2.index;\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: index,\n        isSelecting: true\n      });\n    };\n\n    _this.handleMouseLeave = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onMouseLeave'].concat(args));\n\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        selectedIndex: -1,\n        isSelecting: false\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Rating.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        disabled = _this$props2.disabled,\n        icon = _this$props2.icon,\n        maxRating = _this$props2.maxRating,\n        size = _this$props2.size;\n    var _this$state = this.state,\n        rating = _this$state.rating,\n        selectedIndex = _this$state.selectedIndex,\n        isSelecting = _this$state.isSelecting;\n    var classes = cx('ui', icon, size, useKeyOnly(disabled, 'disabled'), useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);\n    var rest = getUnhandledProps(Rating, this.props);\n    var ElementType = getElementType(Rating, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      role: \"radiogroup\",\n      onMouseLeave: this.handleMouseLeave,\n      tabIndex: disabled ? 0 : -1\n    }), _times(maxRating, function (i) {\n      return /*#__PURE__*/React.createElement(RatingIcon, {\n        tabIndex: disabled ? -1 : 0,\n        active: rating >= i + 1,\n        \"aria-checked\": rating === i + 1,\n        \"aria-posinset\": i + 1,\n        \"aria-setsize\": maxRating,\n        index: i,\n        key: i,\n        onClick: _this2.handleIconClick,\n        onMouseEnter: _this2.handleIconMouseEnter,\n        selected: selectedIndex >= i && isSelecting\n      });\n    }));\n  };\n\n  return Rating;\n}(Component);\n\nRating.handledProps = [\"as\", \"className\", \"clearable\", \"defaultRating\", \"disabled\", \"icon\", \"maxRating\", \"onRate\", \"rating\", \"size\"];\nexport { Rating as default };\nRating.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * You can clear the rating by clicking on the current start rating.\n   * By default a rating will be only clearable if there is 1 icon.\n   * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n   */\n  clearable: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n\n  /** The initial rating value. */\n  defaultRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** You can disable or enable interactive rating.  Makes a read-only rating. */\n  disabled: PropTypes.bool,\n\n  /** A rating can use a set of star or heart icons. */\n  icon: PropTypes.oneOf(['star', 'heart']),\n\n  /** The total number of icons. */\n  maxRating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called after user selects a new rating.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed rating.\n   */\n  onRate: PropTypes.func,\n\n  /** The current number of active icons. */\n  rating: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium', 'big'))\n} : {};\nRating.autoControlledProps = ['rating'];\nRating.defaultProps = {\n  clearable: 'auto',\n  maxRating: 1\n};\nRating.Icon = RatingIcon;"]},"metadata":{},"sourceType":"module"}