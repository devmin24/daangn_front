{"ast":null,"code":"import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/redux-actions/es/utils/unflattenActionCreators.js"],"names":["DEFAULT_NAMESPACE","isEmpty","camelCase","unflattenActionCreators","flatActionCreators","_temp","_ref","_ref$namespace","namespace","prefix","unflatten","flatActionType","partialNestedActionCreators","partialFlatActionTypePath","nextNamespace","shift","nestedActionCreators","Object","getOwnPropertyNames","forEach","type","unprefixedType","replace","split"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,eAAe,SAASC,uBAAT,CAAiCC,kBAAjC,EAAqDC,KAArD,EAA4D;AACzE,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,cAAc,GAAGD,IAAI,CAACE,SAD1B;AAAA,MAEIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4BP,iBAA5B,GAAgDO,cAFhE;AAAA,MAGIE,MAAM,GAAGH,IAAI,CAACG,MAHlB;;AAKA,WAASC,SAAT,CAAmBC,cAAnB,EAAmCC,2BAAnC,EAAgEC,yBAAhE,EAA2F;AACzF,QAAIC,aAAa,GAAGZ,SAAS,CAACW,yBAAyB,CAACE,KAA1B,EAAD,CAA7B;;AAEA,QAAId,OAAO,CAACY,yBAAD,CAAX,EAAwC;AACtCD,MAAAA,2BAA2B,CAACE,aAAD,CAA3B,GAA6CV,kBAAkB,CAACO,cAAD,CAA/D;AACD,KAFD,MAEO;AACL,UAAI,CAACC,2BAA2B,CAACE,aAAD,CAAhC,EAAiD;AAC/CF,QAAAA,2BAA2B,CAACE,aAAD,CAA3B,GAA6C,EAA7C;AACD;;AAEDJ,MAAAA,SAAS,CAACC,cAAD,EAAiBC,2BAA2B,CAACE,aAAD,CAA5C,EAA6DD,yBAA7D,CAAT;AACD;AACF;;AAED,MAAIG,oBAAoB,GAAG,EAA3B;AACAC,EAAAA,MAAM,CAACC,mBAAP,CAA2Bd,kBAA3B,EAA+Ce,OAA/C,CAAuD,UAAUC,IAAV,EAAgB;AACrE,QAAIC,cAAc,GAAGZ,MAAM,GAAGW,IAAI,CAACE,OAAL,CAAa,KAAKb,MAAL,GAAcD,SAA3B,EAAsC,EAAtC,CAAH,GAA+CY,IAA1E;AACA,WAAOV,SAAS,CAACU,IAAD,EAAOJ,oBAAP,EAA6BK,cAAc,CAACE,KAAf,CAAqBf,SAArB,CAA7B,CAAhB;AACD,GAHD;AAIA,SAAOQ,oBAAP;AACD","sourcesContent":["import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}"]},"metadata":{},"sourceType":"module"}