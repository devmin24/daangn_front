{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleTitleOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionPanel.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        content = _this$props.content,\n        index = _this$props.index,\n        title = _this$props.title;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, AccordionTitle.create(title, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active,\n        index: index\n      },\n      overrideProps: this.handleTitleOverrides\n    }), AccordionContent.create(content, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active\n      }\n    }));\n  };\n\n  return AccordionPanel;\n}(Component);\n\nAccordionPanel.handledProps = [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"];\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;","map":{"version":3,"sources":["/Users/parkminkyung/sparta_react/daangnmarket/node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionPanel.js"],"names":["_inheritsLoose","_invoke","PropTypes","React","Component","createShorthandFactory","customPropTypes","AccordionTitle","AccordionContent","AccordionPanel","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleTitleOverrides","predefinedProps","onClick","e","titleProps","props","_proto","prototype","render","_this$props","active","content","index","title","createElement","Fragment","create","autoGenerateKey","defaultProps","overrideProps","handledProps","propTypes","process","env","NODE_ENV","bool","itemShorthand","oneOfType","number","string","onTitleClick","func"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleTitleOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionPanel.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        content = _this$props.content,\n        index = _this$props.index,\n        title = _this$props.title;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, AccordionTitle.create(title, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active,\n        index: index\n      },\n      overrideProps: this.handleTitleOverrides\n    }), AccordionContent.create(content, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active\n      }\n    }));\n  };\n\n  return AccordionPanel;\n}(Component);\n\nAccordionPanel.handledProps = [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"];\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;"]},"metadata":{},"sourceType":"module"}